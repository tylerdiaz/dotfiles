#!/bin/sh

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.osx` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Check for Homebrew,
# Install if we don't have it
if test ! $(which brew); then
  echo "Installing homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Make sure we’re using the latest Homebrew.
brew update

# Upgrade any already-installed formulae.
brew upgrade --all

# Install GNU core utilities (those that come with OS X are outdated)
brew install coreutils 2>/dev/null

# Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed
brew install findutils 2>/dev/null

# Install Bash 4
brew install bash 2>/dev/null

# Install more recent versions of some OS X tools
brew tap homebrew/dupes 2>/dev/null
brew install homebrew/dupes/grep 2>/dev/null

binaries=(
  ack
  cask
  homebrew/versions/bash-completion2
  colordiff
  git
  node
  imagemagick
  postgresql
  mongodb
  moreutils
  redis
  sqlite
  tree
  youtube-dl
)

echo "Installing brew binaries..."
brew install ${binaries[@]}

brew install caskroom/cask/brew-cask 2>/dev/null

# Apps
apps=(
  flux
  google-chrome
  quicklook-csv
  quicklook-json
  slack
  iTerm2
  emacs
  spotify
  seil
  wacom-tablet
  sizeUp
  github
)

# Install apps to /Applications
# Default is: /Users/$user/Applications
echo "Installing apps via brew cask..."
brew cask install --appdir="/Applications" ${apps[@]} 2>/dev/null

# Cleanup brew
echo "Cleaning up brew..."
brew cleanup 2>/dev/null

## Install RVM
curl -L https://get.rvm.io | bash -s stable --auto-dotfiles --autolibs=enable --rails

### System config time

# Restart automatically if the computer freezes
sudo systemsetup -setrestartfreeze on

# go into computer sleep mode after 20min
sudo systemsetup -setcomputersleep 20

# Increase window resize speed for Cocoa applications
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

# Trackpad: enable tap to click for this user and for the login screen
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

# Disable “natural” (Lion-style) scrolling
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# Enable full keyboard access for all controls
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# Disable press-and-hold for keys in favor of key repeat
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1

# Automatically illuminate built-in MacBook keyboard in low light
defaults write com.apple.BezelServices kDim -bool true
# Turn off keyboard illumination when computer is not used for 5 minutes
defaults write com.apple.BezelServices kDimTime -int 300

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Finder: allow text selection in Quick Look
defaults write com.apple.finder QLEnableTextSelection -bool true

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Use list view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Show the ~/Library folder
chflags nohidden ~/Library

# Enable subpixel font rendering on non-Apple LCDs
defaults write NSGlobalDomain AppleFontSmoothing -int 2

# Enable HiDPI display modes (requires restart)
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true
